Q) You are given a string num, representing a large integer. Return the largest-valued odd integer (as a string) that is a non-empty substring of num, or an empty string "" if no odd integer exists.

A substring is a contiguous sequence of characters within a string.
// solution :
class Solution {
    public String largestOddNumber(String num) {
        int lastOddIndex = -1;  // Initialize with -1 to indicate no odd number found yet

        for(int i = 0; i < num.length(); i++) {
            int currentValue = num.charAt(i) - '0';  // Convert character to integer by subtracting ASCII value of '0'
            if (currentValue % 2 != 0) {  // Current value is odd
                lastOddIndex = i;  // Update last odd index
            } 
        }

        // When no odd number is found, lastOddIndex remains -1
        // In such case, return empty string ""
        if (lastOddIndex == -1) {
            return "";
        }

        // If the lastOddIndex is not -1,
        // We return a substring starting from index 0 to the last odd index (inclusive)
        // The substring method's second parameter is exclusive hence we pass lastOddIndex + 1
        return num.substring(0, lastOddIndex + 1);
    }
}
