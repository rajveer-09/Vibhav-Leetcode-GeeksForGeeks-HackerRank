Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.

A shift on s consists of moving the leftmost character of s to the rightmost position.

For example, if s = "abcde", then it will be "bcdea" after one shift.
 

Example 1:

Input: s = "abcde", goal = "cdeab"
Output: true
Example 2:

Input: s = "abcde", goal = "abced"
Output: false

// solution 

class Solution {
    public boolean rotateString(String s, String goal) {
        
        /*
        String A = "abcde"
        A+A = "abcde"+"abcde" = "abcdeabcde"
        
        String B = "cdeab"
        String B1 = "abced"
        
        No matter how many rotation we do, our B will always be a substring of (A+A) and B1 will not be a substring
        */
        
        return s.length() == goal.length() && (s+s).contains(goal);
        
    }
}
